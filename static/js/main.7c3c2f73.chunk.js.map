{"version":3,"sources":["components/StartScreen/StartScreen.jsx","data/history.js","components/StartScreen/index.js","data/stateActions.js","components/TeamField/TeamField.jsx","components/TeamField/TeamField1.js","components/TeamField/TeamField2.js","components/Thermometer/Thermometer.jsx","components/Thermometer/Thermometer1.js","components/Thermometer/Thermometer2.js","components/DraftScreen/DraftScreen.jsx","components/DraftScreen/index.js","components/App/App.jsx","data/initial.js","data/reducers.js","data/store.js","index.js"],"names":["StartScreen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","team1Name","team2Name","teamsSize","handleChange","bind","assertThisInitialized","handleClick","e","currentTarget","id","setState","value","preventDefault","onSubmit","react_default","a","createElement","Fragment","className","htmlFor","onChange","type","min","max","onClick","Component","createBrowserHistory","connect","dispatch","data","_ref3","history","push","TeamField","_ref","teamName","teamPlayers","map","player","i","key","team1Players","team2Players","Thermometer","xp","style","width","concat","team1Experience","team2Experience","DraftScreen","playerName","playerExperience","errorMessage","handleInputChange","handleSliderChange","_this$props","length","onFirstSubmit","_this2","_this$props2","team1Xp","team2Xp","TeamField1","Thermometer1","TeamField2","Thermometer2","reset","placeholder","name","href","xmlns","height","viewBox","d","experience","_ref2","App","react_router","exact","path","component","initial","reducer","action","objectSpread","teamsSubmission","randInt","toConsumableArray","firstSubmission","playerSubmission","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7c3c2f73.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass StartScreen extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      team1Name: 'Team 1',\n      team2Name: 'Team 2',\n      teamsSize: 5\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleChange (e) {\n    switch (e.currentTarget.id) {\n      case 'team-one-name' :\n        this.setState({ team1Name: e.currentTarget.value })\n        break\n      case 'team-two-name' :\n        this.setState({ team2Name: e.currentTarget.value })\n        break\n      case 'teams-size' :\n        this.setState({ teamsSize: +e.currentTarget.value })\n        break\n      default:\n        return null\n    }\n  }\n\n  handleClick (e) {\n    e.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n\n        <h2 className='app_title'>Dream Draft</h2>\n        <h4 className='strap_line'>Randomise and Balance Teams</h4>\n\n        <form className='start_form'>\n          <div className='form_structure'>\n            <label htmlFor='team one name'>Enter Team Name</label>\n            <input className='input_field' onChange={this.handleChange} type='input' id='team-one-name' value={this.state.team1Name} />\n          </div>\n\n          <div className='form_structure'>\n            <label htmlFor='team two name'>Enter Team Name</label>\n            <input className='input_field' onChange={this.handleChange} type='input' id='team-two-name' value={this.state.team2Name} />\n          </div>\n\n          <div className='form_structure'>\n            <label htmlFor='team size'>Select a size for both teams</label>\n            <input className='input_field' onChange={this.handleChange} type='number' min='3' max='11' id='teams-size' value={this.state.teamsSize} />\n          </div>\n\n          <button onClick={this.handleClick} className='form_structure submit_button'>Start Draft</button>\n        </form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default StartScreen\n","import { createBrowserHistory } from 'history'\nexport default createBrowserHistory()\n","import { connect } from 'react-redux'\nimport StartScreen from './StartScreen'\nimport { handleTeamsSubmisson } from '../../data/stateActions'\nimport history from '../../data/history'\n\n// dispatches action to submit team names, then navigates user to draft screen\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: data => {\n      dispatch(handleTeamsSubmisson(data))\n      history.push('/draft-screen')\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(StartScreen)\n","export const handleFirstSubmisson = ({ playerName, playerExperience }) => {\n  return {\n\n    type: 'submitFirstPlayer',\n    player: playerName,\n    experience: playerExperience\n  }\n}\n\nexport const handlePlayerSubmisson = ({ playerName, playerExperience }) => {\n  return {\n\n    type: 'submitPlayer',\n    player: playerName,\n    experience: playerExperience\n  }\n}\n\nexport const handleReset = () => {\n  return {\n    type: 'reset'\n  }\n}\n\nexport const handleTeamsSubmisson = ({ team1Name, team2Name, teamsSize }) => {\n  return {\n    type: 'submitTeams',\n    team1Name,\n    team2Name,\n    teamsSize\n  }\n}\n","import React from 'react'\n\nconst TeamField = ({ teamName, teamPlayers }) => {\n  return (\n    <React.Fragment>\n      <div className='team_field'>\n        <h4>{ teamName }</h4>\n        <ul className='list-group'>\n          { teamPlayers.map((player, i) => (\n            <li className='list-group-item' key={i}>{ player }</li>\n          )) }\n        </ul>\n      </div>\n    </React.Fragment>\n  )\n}\nexport default TeamField\n","import { connect } from 'react-redux'\nimport TeamField from './TeamField'\n\nconst mapStateToProps = state => {\n  return {\n    teamPlayers: state.team1Players\n  }\n}\n\nexport default connect(mapStateToProps, null)(TeamField)\n","import { connect } from 'react-redux'\nimport TeamField from './TeamField'\n\nconst mapStateToProps = state => {\n  return {\n    teamPlayers: state.team2Players\n  }\n}\n\nexport default connect(mapStateToProps, null)(TeamField)\n","import React from 'react'\n\n// interpolates team experience value as width of 'temperature' div\n\nconst Thermometer = ({ xp }) => (xp ? <div className='temp' style={{ width: `${xp / 2}vw` }} /> : <div className='thermobase' />)\n\nexport default Thermometer\n","import { connect } from 'react-redux'\nimport Thermometer from './Thermometer'\n\nconst mapStateToProps = state => {\n  return {\n    xp: state.team1Experience\n  }\n}\n\nexport default connect(mapStateToProps, null)(Thermometer)\n","import { connect } from 'react-redux'\nimport Thermometer from './Thermometer'\n\nconst mapStateToProps = state => {\n  return {\n    xp: state.team2Experience\n  }\n}\n\nexport default connect(mapStateToProps, null)(Thermometer)\n","import React, { Component } from 'react'\nimport TeamField1 from '../TeamField/TeamField1'\nimport TeamField2 from '../TeamField/TeamField2'\nimport Thermometer1 from '../Thermometer/Thermometer1'\nimport Thermometer2 from '../Thermometer/Thermometer2'\n\nclass DraftScreen extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      playerName: '',\n      playerExperience: 10,\n      errorMessage: ''\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleSliderChange = this.handleSliderChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleInputChange (e) {\n    this.setState({ playerName: e.currentTarget.value })\n  }\n\n  handleSliderChange (e) {\n    this.setState({ playerExperience: e.currentTarget.value })\n  }\n\n  handleClick (e) {\n    e.preventDefault()\n    if (!this.state.playerName) {\n      this.setState({ errorMessage: 'Please enter a player name' })\n    } else {\n      let { team1Players, team2Players } = this.props\n\n      team1Players.length === 0 && team2Players.length === 0 ? this.props.onFirstSubmit(this.state) : this.props.onSubmit(this.state)\n      this.setState({ playerName: '' })\n      this.setState({ errorMessage: '' })\n    }\n  }\n\n  render () {\n    const { team1Players, team2Players, teamsSize, team1Xp, team2Xp, team1Name, team2Name } = this.props\n\n    return (\n\n      <React.Fragment>\n\n        <div className='teams_container'>\n\n          <div className='team_field1'>\n            <TeamField1 teamName={team1Name} />\n            <div className='thermometer_one'>\n              <Thermometer1 />\n            </div>\n          </div>\n\n          <div className='team_field2'>\n            <TeamField2 teamName={team2Name} />\n            <div className='thermometer_two'>\n              <Thermometer2 />\n            </div>\n          </div>\n\n        </div>\n        <div className='reset_container'>\n          <button\n            className='reset_button'\n            onClick={() => this.props.reset()}\n          >Reset\n          </button>\n        </div>\n\n        <form>\n\n          <div className='form_structure'>\n\n            {team1Players.length === teamsSize && team2Players.length === teamsSize\n              ? `Draft complete. ${team1Name} strength is ${team1Xp} and ${team2Name} is ${team2Xp}. Game on!`\n\n              : <div>\n                <label className='form_label' htmlFor='name'>Enter Player Name</label>\n                <input\n                  className='input_field'\n                  onChange={this.handleInputChange}\n                  type='input'\n                  id='name'\n                  value={this.state.playerName}\n                  placeholder='Player Name'\n                />\n                <div>{this.state.errorMessage}</div>\n              </div>\n\n            }\n\n          </div>\n\n          <div className='form_structure'>\n\n            <label className='form_label' htmlFor='experience'>Set Player Experience</label>\n            <input\n\n              className='slider'\n              onChange={this.handleSliderChange}\n              id='experience'\n              type='range'\n              name='points'\n              min='1'\n              max='10'\n            />\n          </div>\n\n          <button className='submit_button' onClick={this.handleClick}>Submit Player</button>\n\n        </form>\n\n        <div className='nav_wrapper'>\n          <nav className='social_icons'>\n            <a href='https://www.facebook.com/'><svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'><path d='M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z' /></svg></a>\n            <a href='https://www.whatsapp.com/'><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z' /></svg></a>\n          </nav>\n        </div>\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default DraftScreen\n","import { connect } from 'react-redux'\nimport DraftScreen from './DraftScreen'\nimport { handleFirstSubmisson, handlePlayerSubmisson, handleReset } from '../../data/stateActions'\n\nconst mapStateToProps = state => {\n  return {\n    team1Name: state.team1Name,\n    team2Name: state.team2Name,\n    team1Players: state.team1Players,\n    team2Players: state.team2Players,\n    teamsSize: state.teamsSize,\n    team1Xp: state.team1Experience,\n    team2Xp: state.team2Experience\n  }\n}\n\n// dispatches either first submission action, standard submit or reset, depending on case\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFirstSubmit: data => dispatch(handleFirstSubmisson(data)),\n    onSubmit: data => dispatch(handlePlayerSubmisson(data)),\n    reset: () => dispatch(handleReset())\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DraftScreen)\n","import React from 'react'\nimport StartScreen from '../StartScreen'\nimport DraftScreen from '../DraftScreen'\nimport history from '../../data/history'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport '../../gulp/dist/main.css'\n\nconst App = () => {\n  return (\n\n    \t<Router history={history}>\n      <React.Fragment>\n        <Switch>\n          <Route exact path='/' component={StartScreen} />\n          <Route exact path='/draft-screen' component={DraftScreen} />\n        </Switch>\n      </React.Fragment>\n    </Router>\n\n  )\n}\n\nexport default App\n","const initial = {\n\n  teamsSize: 0,\n  team1Name: '',\n  team2Name: '',\n  team1Experience: 0,\n  team2Experience: 0,\n  team1Players: [],\n  team2Players: []\n}\n\nexport default initial\n","import initial from './initial'\nimport randInt from 'random-int'\n\nconst reset = (state) => (\n\n  { ...state,\n    team1Players: initial.team1Players,\n    team2Players: initial.team2Players,\n    team1Experience: initial.team1Experience,\n    team2Experience: initial.team2Experience }\n\n)\n\nconst teamsSubmission = (state, action) => ({ ...state, team1Name: action.team1Name, team2Name: action.team2Name, teamsSize: action.teamsSize })\n\nconst firstSubmission = (state, action) => {\n  // called if both teams currently have no players - randomly assigns first player to either team\n\n  if (randInt(0, 1) === 0) {\n    return (\n\n      { ...state,\n        team1Players: [...state.team1Players, action.player],\n        team1Experience: state.team1Experience + +action.experience }\n    )\n  } else {\n    return (\n\n      { ...state,\n        team2Players: [...state.team2Players, action.player],\n        team2Experience: state.team2Experience + +action.experience }\n\n    )\n  }\n}\n\nconst playerSubmission = (state, action) => {\n  // called if one or both teams have players\n\n  if ((state.team2Experience > state.team1Experience && state.team1Players.length < state.teamsSize) ||\n\t\t(state.team2Players.length === state.teamsSize && state.team1Players.length < state.teamsSize)) {\n    return (\n      { ...state,\n        team1Players: [...state.team1Players, action.player],\n        team1Experience: state.team1Experience + +action.experience }\n    )\n  } else if ((state.team1Experience > state.team2Experience && state.team2Players.length < state.teamsSize) ||\n\t\t(state.team1Players.length === state.teamsSize && state.team2Players.length < state.teamsSize)) {\n    return (\n      { ...state,\n        team2Players: [...state.team2Players, action.player],\n        team2Experience: state.team2Experience + +action.experience }\n    )\n  } else if (state.team1Experience === state.team2Experience && state.team1Players.length < state.teamsSize && state.team2Players.length < state.teamsSize) {\n    // reaches this condition if both teams have value and are equal - randomly assigns next player\n\n    return (\n\n      randInt(0, 1) === 0\n\n        ? { ...state,\n          team1Players: [...state.team1Players, action.player],\n          team1Experience: state.team1Experience + +action.experience }\n\n      // checks if both teams sizes are equal to selected team size - if so, stops draft by returning state\n\n        : state.team1Players.length === state.teamsSize && state.team2Players.length === state.teamsSize ? null\n\n          : { ...state,\n            team2Players: [...state.team2Players, action.player],\n            team2Experience: state.team2Experience + +action.experience }\n    )\n  } else {\n    return state\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'reset': return reset(state)\n    case 'submitTeams' : return teamsSubmission(state, action)\n    case 'submitFirstPlayer' : return firstSubmission(state, action)\n    case 'submitPlayer': return playerSubmission(state, action)\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import initial from './initial'\nimport reducer from './reducers'\nimport { createStore, compose } from 'redux'\n\nconst reduxDevTools =\n    (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__) || compose\n\nconst store = createStore(reducer, initial, reduxDevTools())\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App/App'\nimport store from './data/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <div className='page_wrapper'>\n      <App />\n    </div>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}